"use client";

import { useState, useRef } from "react";

const features = [
  {
    title: "Cover the basics.",
    description:
      "We start from scratch, absolute basics of JavaScript, Data Types, Variables, Loops, Conditions, Functions, and take it from there. ",
    type: "video",
    path: "https://d3m8mk7e1mf7xn.cloudfront.net/app/newsletter.webm",
    format: "video/webm",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          stroke="currentColor"
          strokeWidth="1"
          strokeLinecap="round"
          strokeLinejoin="round"
          //   fillRule="evenodd"
          //   clipRule="evenodd"
          d="M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12Z"
        ></path>
      </svg>
    ),
  },
  {
    title: "And even more.",
    description:
      "While we start from basics, we slowly teach concepts you will require at your first job, like CLI, Git, Docker, etc., as well as front-end tools like Tailwind CSS.",
    type: "video",
    path: "https://d3m8mk7e1mf7xn.cloudfront.net/app/newsletter.webm",
    format: "video/webm",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          d="M6 12H18M12 6V18"
          stroke="currentColor"
          strokeWidth="3"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      </svg>
    ),
  },
  {
    title: "Rigorous coursework.",
    description:
      "30 Days is a short timeframe, but we don't skimp on the content. Videos are long and condensed, with plenty of assignments, YOU HAVE TO WORK HARD.",
    type: "image",
    path: "https://images.unsplash.com/photo-1571171637578-41bc2dd41cd2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3540&q=80",
    alt: "A computer",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          stroke="currentColor"
          strokeWidth="0.5"
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M3.92443 18.6073L4.45475 18.077L3.92443 18.6073ZM5.39271 20.0756L4.86238 20.6059L5.39271 20.0756ZM9.06343 20.0756L8.5331 20.6059H8.5331L9.06343 20.0756ZM9.79757 20.8097L10.3279 20.2794L10.3279 20.2794L9.79757 20.8097ZM14.6055 19.3774L13.8811 19.1833L13.8811 19.1833L14.6055 19.3774ZM14.6055 18.5713L13.8811 18.7654L14.6055 18.5713ZM12.036 21.9469L11.8419 21.2225H11.8419L12.036 21.9469ZM11.2299 21.9469L11.424 21.2225L11.2299 21.9469ZM2.05306 11.964L2.77751 12.1581V12.1581L2.05306 11.964ZM3.19028 14.2024L2.65995 14.7328L3.19028 14.2024ZM2.05306 12.7701L1.32862 12.9643L2.05306 12.7701ZM4.62257 9.3945L4.81668 10.1189H4.81668L4.62257 9.3945ZM5.42871 9.3945L5.62283 8.67005V8.67005L5.42871 9.3945ZM20.0756 9.06343L19.5452 9.59376L20.0756 9.06343ZM20.8097 9.79757L21.34 9.26724L20.8097 9.79757ZM19.3774 14.6055L19.1833 13.8811H19.1833L19.3774 14.6055ZM18.5713 14.6055L18.7654 13.8811L18.7654 13.8811L18.5713 14.6055ZM21.9469 12.036L21.2225 11.8419L21.2225 11.8419L21.9469 12.036ZM21.9469 11.2299L21.2225 11.424L21.2225 11.424L21.9469 11.2299ZM11.964 2.05307L11.7699 1.32862V1.32862L11.964 2.05307ZM14.2024 3.19028L13.6721 3.72061L14.2024 3.19028ZM12.7701 2.05307L12.576 2.77751V2.77751L12.7701 2.05307ZM9.3945 4.62257L8.67005 4.42845V4.42845L9.3945 4.62257ZM9.3945 5.42871L10.1189 5.2346V5.2346L9.3945 5.42871ZM7.02426 16.9757C7.31715 17.2686 7.31715 17.7435 7.02426 18.0364C6.73136 18.3293 6.25649 18.3293 5.9636 18.0364L7.02426 16.9757ZM18.0364 5.9636C18.3293 6.25649 18.3293 6.73136 18.0364 7.02426C17.7435 7.31715 17.2686 7.31715 16.9757 7.02426L18.0364 5.9636ZM11.6329 7.96221L12.1633 7.43188L11.6329 7.96221ZM4.45475 18.077L5.92304 19.5452L4.86238 20.6059L3.39409 19.1376L4.45475 18.077ZM19.5452 5.92304L18.077 4.45475L19.1376 3.39409L20.6059 4.86238L19.5452 5.92304ZM19.5452 7.79895C19.9063 7.43788 20.1226 7.2193 20.258 7.04192C20.3203 6.96028 20.346 6.9114 20.3567 6.88584C20.3649 6.86626 20.3638 6.86179 20.3638 6.861L21.8638 6.861C21.8638 7.30594 21.6745 7.65828 21.4505 7.95179C21.2398 8.22799 20.937 8.52853 20.6059 8.85961L19.5452 7.79895ZM20.6059 4.86238C20.937 5.19347 21.2398 5.49401 21.4505 5.77021C21.6745 6.06372 21.8638 6.41605 21.8638 6.861L20.3638 6.861C20.3638 6.8602 20.3649 6.85573 20.3567 6.83615C20.346 6.8106 20.3203 6.76171 20.258 6.68008C20.1226 6.50269 19.9063 6.28411 19.5452 5.92304L20.6059 4.86238ZM5.92304 19.5452C6.28411 19.9063 6.50269 20.1226 6.68008 20.258C6.76171 20.3203 6.8106 20.346 6.83615 20.3567C6.85573 20.3649 6.8602 20.3638 6.861 20.3638L6.861 21.8638C6.41605 21.8638 6.06372 21.6745 5.77021 21.4505C5.49401 21.2398 5.19347 20.937 4.86238 20.6059L5.92304 19.5452ZM8.85961 20.6059C8.52853 20.937 8.22799 21.2398 7.95179 21.4505C7.65828 21.6745 7.30594 21.8638 6.861 21.8638L6.861 20.3638C6.86179 20.3638 6.86626 20.3649 6.88584 20.3567C6.9114 20.346 6.96028 20.3203 7.04191 20.258C7.2193 20.1226 7.43788 19.9063 7.79895 19.5452L8.85961 20.6059ZM4.45475 16.201C4.09368 16.5621 3.87736 16.7807 3.74201 16.9581C3.67973 17.0397 3.65396 17.0886 3.6433 17.1142C3.63513 17.1337 3.63619 17.1382 3.63619 17.139L2.13619 17.139C2.13619 16.6941 2.32554 16.3417 2.54948 16.0482C2.76022 15.772 3.06301 15.4715 3.39409 15.1404L4.45475 16.201ZM3.39409 19.1376C3.06301 18.8065 2.76022 18.506 2.54948 18.2298C2.32554 17.9363 2.13619 17.5839 2.13619 17.139L3.63619 17.139C3.63619 17.1398 3.63513 17.1443 3.6433 17.1638C3.65396 17.1894 3.67973 17.2383 3.74201 17.3199C3.87736 17.4973 4.09368 17.7159 4.45475 18.077L3.39409 19.1376ZM15.1404 3.39409C15.4715 3.06301 15.772 2.76022 16.0482 2.54948C16.3417 2.32554 16.6941 2.13619 17.139 2.13619L17.139 3.63619C17.1382 3.63619 17.1337 3.63513 17.1142 3.6433C17.0886 3.65396 17.0397 3.67973 16.9581 3.74201C16.7807 3.87736 16.5621 4.09368 16.201 4.45475L15.1404 3.39409ZM18.077 4.45475C17.7159 4.09368 17.4973 3.87736 17.3199 3.74201C17.2383 3.67973 17.1894 3.65396 17.1638 3.6433C17.1443 3.63513 17.1398 3.63619 17.139 3.63619L17.139 2.13619C17.5839 2.13619 17.9363 2.32554 18.2298 2.54948C18.506 2.76022 18.8065 3.06301 19.1376 3.39409L18.077 4.45475ZM9.59376 19.5452L10.3279 20.2794L9.26724 21.34L8.5331 20.6059L9.59376 19.5452ZM12.938 20.2794C13.2908 19.9266 13.5194 19.6969 13.6777 19.5071C13.8292 19.3253 13.8669 19.2363 13.8811 19.1833L15.3299 19.5715C15.2361 19.9216 15.0482 20.2057 14.8297 20.4677C14.6179 20.7218 14.3319 21.0067 13.9986 21.34L12.938 20.2794ZM13.9986 16.6087C14.3319 16.942 14.6179 17.2269 14.8297 17.481C15.0482 17.743 15.2361 18.0271 15.3299 18.3772L13.8811 18.7654C13.8669 18.7124 13.8292 18.6234 13.6777 18.4416C13.5194 18.2518 13.2908 18.0222 12.938 17.6693L13.9986 16.6087ZM13.8811 19.1833C13.9177 19.0464 13.9177 18.9023 13.8811 18.7654L15.3299 18.3772C15.4348 18.7684 15.4348 19.1803 15.3299 19.5715L13.8811 19.1833ZM13.9986 21.34C13.6653 21.6734 13.3804 21.9593 13.1263 22.1712C12.8643 22.3896 12.5802 22.5776 12.2301 22.6714L11.8419 21.2225C11.8949 21.2083 11.9839 21.1707 12.1657 21.0191C12.3555 20.8609 12.5851 20.6322 12.938 20.2794L13.9986 21.34ZM10.3279 20.2794C10.6807 20.6322 10.9104 20.8609 11.1002 21.0191C11.282 21.1707 11.371 21.2083 11.424 21.2225L11.0357 22.6714C10.6857 22.5776 10.4016 22.3896 10.1396 22.1712C9.88548 21.9593 9.60055 21.6734 9.26724 21.34L10.3279 20.2794ZM12.2301 22.6714C11.8389 22.7762 11.427 22.7762 11.0357 22.6714L11.424 21.2225C11.5609 21.2592 11.705 21.2592 11.8419 21.2225L12.2301 22.6714ZM3.72061 11.062C3.36778 11.4149 3.13912 11.6445 2.98091 11.8343C2.82932 12.0161 2.79171 12.1051 2.77751 12.1581L1.32862 11.7699C1.42242 11.4198 1.61035 11.1357 1.82884 10.8737C2.04069 10.6196 2.32664 10.3347 2.65995 10.0014L3.72061 11.062ZM2.65995 14.7328C2.32664 14.3994 2.04069 14.1145 1.82884 13.8604C1.61035 13.5984 1.42242 13.3143 1.32862 12.9643L2.77751 12.576C2.79171 12.629 2.82932 12.718 2.98091 12.8998C3.13912 13.0896 3.36778 13.3193 3.72061 13.6721L2.65995 14.7328ZM2.77751 12.1581C2.74083 12.295 2.74083 12.4391 2.77751 12.576L1.32862 12.9643C1.22379 12.573 1.22379 12.1611 1.32862 11.7699L2.77751 12.1581ZM2.65995 10.0014C2.99326 9.66807 3.27819 9.38212 3.53228 9.17027C3.79432 8.95178 4.07838 8.76385 4.42845 8.67005L4.81668 10.1189C4.76368 10.1331 4.67467 10.1708 4.49287 10.3223C4.30312 10.4806 4.07344 10.7092 3.72061 11.062L2.65995 10.0014ZM6.33067 11.062C5.97784 10.7092 5.74816 10.4806 5.55841 10.3223C5.37661 10.1708 5.2876 10.1331 5.2346 10.1189L5.62283 8.67005C5.9729 8.76385 6.25696 8.95178 6.519 9.17027C6.77308 9.38212 7.05802 9.66807 7.39133 10.0014L6.33067 11.062ZM4.42845 8.67005C4.81968 8.56522 5.2316 8.56523 5.62283 8.67005L5.2346 10.1189C5.09771 10.0823 4.95357 10.0823 4.81668 10.1189L4.42845 8.67005ZM20.6059 8.5331L21.34 9.26724L20.2794 10.3279L19.5452 9.59376L20.6059 8.5331ZM21.34 13.9986C21.0067 14.3319 20.7218 14.6179 20.4677 14.8297C20.2057 15.0482 19.9216 15.2361 19.5715 15.3299L19.1833 13.8811C19.2363 13.8669 19.3253 13.8292 19.5071 13.6777C19.6969 13.5194 19.9266 13.2908 20.2794 12.938L21.34 13.9986ZM17.6693 12.938C18.0222 13.2908 18.2518 13.5194 18.4416 13.6777C18.6234 13.8292 18.7124 13.8669 18.7654 13.8811L18.3772 15.3299C18.0271 15.2361 17.743 15.0482 17.481 14.8297C17.2269 14.6179 16.942 14.3319 16.6087 13.9986L17.6693 12.938ZM19.5715 15.3299C19.1803 15.4348 18.7684 15.4348 18.3772 15.3299L18.7654 13.8811C18.9023 13.9177 19.0464 13.9177 19.1833 13.8811L19.5715 15.3299ZM20.2794 12.938C20.6322 12.5851 20.8609 12.3555 21.0191 12.1657C21.1707 11.9839 21.2083 11.8949 21.2225 11.8419L22.6714 12.2301C22.5776 12.5802 22.3896 12.8643 22.1712 13.1263C21.9593 13.3804 21.6734 13.6653 21.34 13.9986L20.2794 12.938ZM21.34 9.26724C21.6734 9.60055 21.9593 9.88548 22.1712 10.1396C22.3896 10.4016 22.5776 10.6857 22.6714 11.0357L21.2225 11.424C21.2083 11.371 21.1707 11.282 21.0191 11.1002C20.8609 10.9104 20.6322 10.6807 20.2794 10.3279L21.34 9.26724ZM21.2225 11.8419C21.2592 11.705 21.2592 11.5609 21.2225 11.424L22.6714 11.0357C22.7762 11.427 22.7762 11.8389 22.6714 12.2301L21.2225 11.8419ZM10.0014 2.65995C10.3347 2.32664 10.6196 2.04069 10.8737 1.82884C11.1357 1.61035 11.4198 1.42242 11.7699 1.32862L12.1581 2.77751C12.1051 2.79171 12.0161 2.82932 11.8343 2.98091C11.6445 3.13912 11.4149 3.36778 11.062 3.72061L10.0014 2.65995ZM13.6721 3.72061C13.3193 3.36778 13.0896 3.13912 12.8998 2.98091C12.718 2.82932 12.629 2.79171 12.576 2.77751L12.9643 1.32862C13.3143 1.42242 13.5984 1.61035 13.8604 1.82884C14.1145 2.04069 14.3994 2.32664 14.7328 2.65995L13.6721 3.72061ZM11.7699 1.32862C12.1611 1.22379 12.573 1.22379 12.9643 1.32862L12.576 2.77751C12.4391 2.74083 12.295 2.74083 12.1581 2.77751L11.7699 1.32862ZM11.062 3.72061C10.7092 4.07344 10.4806 4.30312 10.3223 4.49287C10.1708 4.67467 10.1331 4.76368 10.1189 4.81668L8.67005 4.42845C8.76385 4.07838 8.95178 3.79432 9.17027 3.53228C9.38212 3.27819 9.66807 2.99326 10.0014 2.65995L11.062 3.72061ZM10.0014 7.39133C9.66807 7.05802 9.38212 6.77308 9.17027 6.519C8.95178 6.25696 8.76386 5.9729 8.67005 5.62283L10.1189 5.2346C10.1331 5.2876 10.1708 5.37661 10.3223 5.55841C10.4806 5.74816 10.7092 5.97784 11.062 6.33067L10.0014 7.39133ZM10.1189 4.81668C10.0823 4.95357 10.0823 5.0977 10.1189 5.2346L8.67005 5.62283C8.56523 5.2316 8.56522 4.81968 8.67005 4.42845L10.1189 4.81668ZM3.72061 13.6721L7.02426 16.9757L5.9636 18.0364L2.65995 14.7328L3.72061 13.6721ZM14.7328 2.65995L18.0364 5.9636L16.9757 7.02426L13.6721 3.72061L14.7328 2.65995ZM12.938 17.6693L11.8367 16.5681L12.8974 15.5075L13.9986 16.6087L12.938 17.6693ZM11.8367 15.5075L15.5075 11.8367L16.5681 12.8974L12.8974 16.5681L11.8367 15.5075ZM16.6087 13.9986L15.5075 12.8974L16.5681 11.8367L17.6693 12.938L16.6087 13.9986ZM11.8367 16.5681L7.43188 12.1633L8.49254 11.1026L12.8974 15.5075L11.8367 16.5681ZM7.43188 12.1633L6.33067 11.062L7.39133 10.0014L8.49254 11.1026L7.43188 12.1633ZM12.1633 8.49254L8.49254 12.1633L7.43188 11.1026L11.1026 7.43188L12.1633 8.49254ZM15.5075 12.8974L11.1026 8.49254L12.1633 7.43188L16.5681 11.8367L15.5075 12.8974ZM11.1026 8.49254L10.0014 7.39133L11.062 6.33067L12.1633 7.43188L11.1026 8.49254ZM19.5452 9.59376C19.0496 9.09814 19.0496 8.29458 19.5452 7.79895L20.6059 8.85961C20.6961 8.76945 20.6961 8.62326 20.6059 8.5331L19.5452 9.59376ZM8.5331 20.6059C8.62326 20.6961 8.76945 20.6961 8.85961 20.6059L7.79895 19.5452C8.29457 19.0496 9.09814 19.0496 9.59376 19.5452L8.5331 20.6059Z"
        ></path>
      </svg>
    ),
  },
  {
    title: "Winning stack.",
    description:
      "JavaScript, TypeScript, NextJS, NodeJS, Tailwind, HTML, and CSS are technologies with evergrowing popularity and jobs.",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          d="M12 14V17M12 14C9.58104 14 7.56329 12.2822 7.10002 10M12 14C14.419 14 16.4367 12.2822 16.9 10M17 5H19.75C19.9823 5 20.0985 5 20.1951 5.01921C20.5918 5.09812 20.9019 5.40822 20.9808 5.80491C21 5.90151 21 6.01767 21 6.25C21 6.94698 21 7.29547 20.9424 7.58527C20.7056 8.77534 19.7753 9.70564 18.5853 9.94236C18.2955 10 17.947 10 17.25 10H17H16.9M7 5H4.25C4.01767 5 3.90151 5 3.80491 5.01921C3.40822 5.09812 3.09812 5.40822 3.01921 5.80491C3 5.90151 3 6.01767 3 6.25C3 6.94698 3 7.29547 3.05764 7.58527C3.29436 8.77534 4.22466 9.70564 5.41473 9.94236C5.70453 10 6.05302 10 6.75 10H7H7.10002M12 17C12.93 17 13.395 17 13.7765 17.1022C14.8117 17.3796 15.6204 18.1883 15.8978 19.2235C16 19.605 16 20.07 16 21H8C8 20.07 8 19.605 8.10222 19.2235C8.37962 18.1883 9.18827 17.3796 10.2235 17.1022C10.605 17 11.07 17 12 17ZM7.10002 10C7.03443 9.67689 7 9.34247 7 9V4.57143C7 4.03831 7 3.77176 7.09903 3.56612C7.19732 3.36201 7.36201 3.19732 7.56612 3.09903C7.77176 3 8.03831 3 8.57143 3H15.4286C15.9617 3 16.2282 3 16.4339 3.09903C16.638 3.19732 16.8027 3.36201 16.901 3.56612C17 3.77176 17 4.03831 17 4.57143V9C17 9.34247 16.9656 9.67689 16.9 10"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
        ;
      </svg>
    ),
  },
  {
    title: "Build a resume.",
    description: "We teach you how to build a resume as well!",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42"
        />
      </svg>
    ),
  },
  {
    title: "Get certified.",
    description:
      "Completing the projects gets you a completion certificate that looks great on your resume.",
    type: "video",
    path: "https://d3m8mk7e1mf7xn.cloudfront.net/app/newsletter.webm",
    format: "video/webm",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        {/* <path
          strokeLinecap="round"
          d="M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25"
        /> */}
        <path
          d="M11.245 4.174C11.4765 3.50808 11.5922 3.17513 11.7634 3.08285C11.9115 3.00298 12.0898 3.00298 12.238 3.08285C12.4091 3.17513 12.5248 3.50808 12.7563 4.174L14.2866 8.57639C14.3525 8.76592 14.3854 8.86068 14.4448 8.93125C14.4972 8.99359 14.5641 9.04218 14.6396 9.07278C14.725 9.10743 14.8253 9.10947 15.0259 9.11356L19.6857 9.20852C20.3906 9.22288 20.743 9.23007 20.8837 9.36432C21.0054 9.48051 21.0605 9.65014 21.0303 9.81569C20.9955 10.007 20.7146 10.2199 20.1528 10.6459L16.4387 13.4616C16.2788 13.5829 16.1989 13.6435 16.1501 13.7217C16.107 13.7909 16.0815 13.8695 16.0757 13.9507C16.0692 14.0427 16.0982 14.1387 16.1563 14.3308L17.506 18.7919C17.7101 19.4667 17.8122 19.8041 17.728 19.9793C17.6551 20.131 17.5108 20.2358 17.344 20.2583C17.1513 20.2842 16.862 20.0829 16.2833 19.6802L12.4576 17.0181C12.2929 16.9035 12.2106 16.8462 12.1211 16.8239C12.042 16.8043 11.9593 16.8043 11.8803 16.8239C11.7908 16.8462 11.7084 16.9035 11.5437 17.0181L7.71805 19.6802C7.13937 20.0829 6.85003 20.2842 6.65733 20.2583C6.49056 20.2358 6.34626 20.131 6.27337 19.9793C6.18915 19.8041 6.29123 19.4667 6.49538 18.7919L7.84503 14.3308C7.90313 14.1387 7.93218 14.0427 7.92564 13.9507C7.91986 13.8695 7.89432 13.7909 7.85123 13.7217C7.80246 13.6435 7.72251 13.5829 7.56262 13.4616L3.84858 10.6459C3.28678 10.2199 3.00588 10.007 2.97101 9.81569C2.94082 9.65014 2.99594 9.48051 3.11767 9.36432C3.25831 9.23007 3.61074 9.22289 4.31559 9.20852L8.9754 9.11356C9.176 9.10947 9.27631 9.10743 9.36177 9.07278C9.43726 9.04218 9.50414 8.99359 9.55657 8.93125C9.61593 8.86068 9.64887 8.76592 9.71475 8.57639L11.245 4.174Z"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      </svg>
    ),
  },
  {
    title: "Development.",
    description:
      "There's a lot of discussion about what's important for job interviews - Dev or DSA. Here, you learn both.",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        {/* <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42"
        /> */}
        <path
          d="M7 8L3 11.6923L7 16M17 8L21 11.6923L17 16M14 4L10 20"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      </svg>
    ),
  },
  {
    title: "DSA.",
    description:
      "There's a lot of discussion about what's important for job interviews - Dev or DSA. Here, you learn both.",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          d="M9 13C9 15.2091 10.7909 17 13 17C14.1046 17 15.1046 16.5523 15.8284 15.8284M9 13H5M9 13C9 11.448 9.88388 10.1025 11.1757 9.43928M5 13C5 13.5523 4.55228 14 4 14C3.44772 14 3 13.5523 3 13C3 12.4477 3.44772 12 4 12C4.55228 12 5 12.4477 5 13ZM19.2929 6.70711C19.1119 6.52614 19 6.27614 19 6C19 5.44772 19.4477 5 20 5C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7C19.7239 7 19.4739 6.88807 19.2929 6.70711ZM19.2929 6.70711L15.8284 10.1716M9.37149 4.92872C9.73983 4.78126 10 4.42101 10 4C10 3.44772 9.55228 3 9 3C8.44772 3 8 3.44772 8 4C8 4.55228 8.44772 5 9 5C9.13127 5 9.25664 4.97471 9.37149 4.92872ZM9.37149 4.92872L11.1757 9.43928M15.8284 15.8284C16.5523 15.1046 17 14.1046 17 13C17 11.8954 16.5523 10.8954 15.8284 10.1716M15.8284 15.8284L19.2929 19.2929M19.2929 19.2929C19.1119 19.4739 19 19.7239 19 20C19 20.5523 19.4477 21 20 21C20.5523 21 21 20.5523 21 20C21 19.4477 20.5523 19 20 19C19.7239 19 19.4739 19.1119 19.2929 19.2929ZM15.8284 10.1716C15.1046 9.44772 14.1046 9 13 9C12.3428 9 11.7227 9.15847 11.1757 9.43928"
          stroke="currentColor"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      </svg>
    ),
  },
  {
    title: "Constantly updated.",
    description:
      "As there are updates or new features in JavaScript or Node or CSS or HTML, any relevant new technology worth learning, whatever it is, be assured you are getting an updated version of the course.",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.0}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          stroke="currentColor"
          strokeWidth="1"
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M12,3A9,9,0,0,0,6,5.32V3A1,1,0,0,0,4,3V8a1,1,0,0,0,.92,1H10a1,1,0,0,0,0-2H7.11A7,7,0,0,1,19,12a1,1,0,0,0,2,0A9,9,0,0,0,12,3Z"
        ></path>
        <path
          stroke="currentColor"
          strokeWidth="1"
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M19.08,15H14a1,1,0,0,0,0,2h2.89A7,7,0,0,1,5,12a1,1,0,0,0-2,0,9,9,0,0,0,15,6.68V21a1,1,0,0,0,2,0V16A1,1,0,0,0,19.08,15Z"
        ></path>
      </svg>
    ),
  },
  {
    title: "Buy once, own forever.",
    description:
      "Once you buy this course, you'll forever own it. No time limit.",
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className="w-6 h-6"
      >
        <path
          d="M10 9.41721C9.16169 8.57524 8.20668 8 7 8C4.79086 8 3 9.79086 3 12C3 14.2091 4.79086 16 7 16C11.5 16 12.5 8 17 8C19.2091 8 21 9.79086 21 12C21 14.2091 19.2091 16 17 16C15.7933 16 14.8383 15.4248 14 14.5828"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      </svg>
    ),
  },
];

// An SEO-friendly accordion component including the title and a description (when clicked.)
const Item = ({ feature, isOpen, setFeatureSelected }) => {
  const accordion = useRef(null);
  const { title, description, svg } = feature;

  return (
    <li>
      <button
        className="flex items-center justify-center w-full py-5 text-base font-medium text-white md:text-lg"
        onClick={(e) => {
          e.preventDefault();
          setFeatureSelected();
        }}
        aria-expanded={isOpen}
      >
        {/* Center svg and title horizontally within the button */}
        <div className="flex items-center gap-2">
          <span className={`duration-85 ${isOpen ? "text-" : ""}`}>{svg}</span>
          <h3 className="text-white hover:underline">{title}</h3>
        </div>
      </button>

      <div
        ref={accordion}
        className={`transition-all duration-300 ease-in-out text-base-content-secondary overflow-hidden`}
        style={
          isOpen
            ? { maxHeight: accordion?.current?.scrollHeight, opacity: 1 }
            : { maxHeight: 0, opacity: 0 }
        }
      >
        <div className="pb-5 leading-relaxed text-white">{description}</div>
      </div>
    </li>
  );
};

const Features = () => {
  const [featureSelected, setFeatureSelected] = useState(0);

  return (
    <section
      id="syllabus"
      className="py-24 space-y-6 md:space-y-8 max-w-7xl mx-auto bg-[#181818]"
    >
      {/* <p className="font-medium text-center text-white">Features</p> */}

      <div className="px-8">
        <h2 className="font-extrabold text-white text-center text-4xl lg:text-6xl tracking-tight mb-8 md:mb-12">
          <span className="leading-loose text-5xl"> 📈 📈 📈 </span>
          <br />
          Everything you need to <br />
          <span className="bg-gradient-to-r from-green-400 to-cyan-500 text-white px-2 md:px-4 ml-1 md:ml-1.5 leading-relaxed whitespace-nowrap">
            upskill quickly
          </span>{" "}
          and
          <span className="bg-gradient-to-l from-green-400 to-cyan-500 text-white px-2 md:px-4 ml-2 md:ml-3.5 leading-relaxed whitespace-nowrap">
            get a job.
          </span>
        </h2>
        <div className="flex flex-col md:flex-row gap-12 md:gap-24 justify-center items-center px-8">
          <div className="w-full flex flex-col md:flex-row justify-center items-center">
            <ul className="w-full md:w-1/2 text-wrap text-center">
              {features
                .slice(0, Math.ceil(features.length / 2))
                .map((feature) => (
                  <Item
                    key={feature.title}
                    feature={feature}
                    isOpen={featureSelected === feature.title}
                    setFeatureSelected={() =>
                      setFeatureSelected(
                        featureSelected === feature.title ? 0 : feature.title
                      )
                    }
                  />
                ))}
            </ul>
            <ul className="w-full md:w-1/2 text-wrap lg:p-6 text-center">
              {features.slice(Math.ceil(features.length / 2)).map((feature) => (
                <Item
                  key={feature.title}
                  feature={feature}
                  isOpen={featureSelected === feature.title}
                  setFeatureSelected={() =>
                    setFeatureSelected(
                      featureSelected === feature.title ? 0 : feature.title
                    )
                  }
                />
              ))}
            </ul>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Features;
